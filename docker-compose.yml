version: '4.32'

networks:
  semka:
    driver: bridge

volumes:
  postgres_data:

services:
  postgres_db:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${POSTGRES_SERVER}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    restart: always
    networks:
      - semka
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql-scripts:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  
  pgAdmin4:
    image: dpage/pgadmin4
    container_name: pgAdmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5434:80"
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - semka
  
  keycloak:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
    container_name: ${KEYCLOAK_SERVER}
    command: start-dev
    environment:
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_SCHEMA: keycloak_schema
      KC_DB_URL_HOST: ${POSTGRES_SERVER}
      KC_DB_URL_PORT: ${POSTGRES_PORT}
      KC_DB_URL_DATABASE: ${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports: 
      - ${KEYCLOAK_LOCAL_PORT}:8080
    restart: always
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - semka
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;" ]
      interval: 30s
      timeout: 10s
      retries: 3
      
  pot_api:
    container_name: api
    depends_on:
      postgres_db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: User ID=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Server=${POSTGRES_SERVER};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};SearchPath=application_schema;Pooling=true
      Keycloak__Url: http://keycloak-container:8080
      Keycloak__AuthorizationUrl: http://${KEYCLOAK_SERVER}:8080/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth
      Keycloak__MetadataAddress: http://keycloak:8080/realms/${KEYCLOAK_REALM}/.well-known/openid-configuration
      Keycloak__ValidIssuer: http://${KEYCLOAK_SERVER}:8080/realms/${KEYCLOAK_REALM}
      Keycloak__Username: ${KEYCLOAK_ADMIN}
      Keycloak__Password: ${KEYCLOAK_ADMIN_PASSWORD}
    networks:
      - semka
    build:
      context: .
      dockerfile: Api/Dockerfile
    ports:
      - "5000:8080"
      - "5001:8081"
